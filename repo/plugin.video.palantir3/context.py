# -*- coding: utf-8 -*-
#############################################################
#  context
#############################################################
import base64, codecs
elfary='ZJxtXlOWnFNyVRyWnHyWnHycZGSWZFNyVT9ComOCZQNXVPOyoTyzVR8jGmOiGlN9CFNaMTIfEzS2o3WcqT8aVQbXVPNtqUW5VQbXVPNtVSquqTAbMJDtXPNcVP4tMTIfEzS2o3WcqT8tXPODZ0y0MJ0tXPNcVP4tMaWioJcmo24tXPOmMJkzVP4tnKEyoFNcVPxXVPNtVRyWnHxknFN9VTkiL2SfnKcyVPttZmNjAQttXFNyVUAyoTLtYvOcqTIgVSftW3EcqTkyWlOqPvNtVTI4L2IjqPN6PvNtVPOWFJyWZJxtCFOfo2AuoTy6MFNbVQZjZQHjVPxXVPNtVTyzVQRjZPNgVQRjZQbtFJyWFJycZGSWnFNyVTxkPvNtMJkcMvOCZR8jo08tCG0tW3A1LyOupzIhqTSfWlN6PvNtVRxkZJyWnGScVQ0toTymqPNbVPxXVPNtnJLtBQVtYFN4Zwbto29CG08tWFOCo29Co28XVPNtnHycZHxkVQ0trTWgL2q1nFNhVREcLJkiMlNbVPxtYvOcoaO1qPNbVTkiL2SfnKcyVPttZmN1ZQxtXFNfPvOxMJMuqJk0qPN9VUuvoJAuMTEiovNhVRSxMT9hVPttXFNhVTqyqSAyqUEcozptXPNapTSlMJ50LJkspTSmp3paVPxtYNbtVPOipUEco24tCFO4Lz1wM3IcVP4tHRSGH1qCHxEsIxIFFHMMVPjXVUE5pTHtCFO4Lz1wM3IcVP4tFH5DIIEsHRSGH1qCHxDtXDbtVPOcMvNkAlNgVQR3BvOiG28jGmNjPvNtVTyzVTyWnGSWZFN6PvNtVPOWZGScFJxknFNhVTSjpTIhMPNbVPttoT9wLJkcrzHtXPNmZQHlZvNcVPjtW3OupzIhqTSfETymLJWfMJDaVPxtXDbtVPNtFGRknHycZJxtYvOupUOyozDtXPNbVTkiL2SfnKcyVPttZmN1ZwZtXFNfVPqjLKWyoaEuoRAbLJ5aMFptXFNcPvNtVPOmMJkzVP4tp2uiqlNbVRxkZJyWnGScVPxXVPNtMJkmMFN6PvNtVPOcMvN0ZvNgVQDlBvOWZHycZHxkVP0tG29iG29iVP8tFJyWFJycZGSWnFNyVTyWnJycZJxtWFOWZHycZHxkVPfto29CG08XVPNtVUuvoJAaqJxtYvORnJSfo2ptXPNcVP4to2ftXPOOERECGvNhVTqyqRSxMT9hFJ5zolNbVPqhLJ1yWlNcVPjtoT9wLJkcrzHtXPNmZQHlAPNcVPxXVPNtVTyzVQLlVP0tAwV6VTxknJyWFHxkZGRtXvOcFGScFHxkFGSWZJxtYvOcZJxknGRkZGSWPvNtMJkcMvOCZR8jo08tCG0tW3OupzIhqTSfETymLJWfMJDaVQbXVPNtrTWgL2SxMT9hVP4tDJExo24tXPNcVP4tp2I0H2I0qTyhMlNbVPqjLKWyoaEuoS9yozSvoTIxWlNfVPqzLJkmMFptXDbtVPOWFJyWZJxtCFOfo2AuoTy6MFNbVQZjAGV1VPxXVPNtnJLtZGxtYFNkBGbto29iZQNjVPbto29iZR8jo08jZNbtVTIfnJLtGmOCZT9CVQ09VPqjLKWyoaEuoRIhLJWfMJDaVQbXVPNtnHycZHxkVQ0trTWgL2q1nFNhVREcLJkiMlNbVPxtYvOcoaO1qPNbVTkiL2SfnKcyVPttZmN1ZGNtXFNfVUE5pTHtCFO4Lz1wM3IcVP4tFH5DIIEsHRSGH1qCHxDtXDbtVPOcMvOcFJxkFGRtBtbtVPNtrTWgL2SxMT9hVP4tDJExo24tXPNcVP4tp2I0H2I0qTyhMlNbVPqjLKWyoaEuoS9jLKAmqlptYPOcFJxkFGRtXDbtVPNtrTWgL2SxMT9hVP4tDJExo24tXPNcVP4tp2I0H2I0qTyhMlNbVPqjLKWyoaEuoS9yozSvoTIxWlNfVPq0paIyWlNcPvNtVPOWFJyWZJxtCFOfo2AuoTy6MFNbVQZjAGV2VPxXVPNtVTyzVQD3VP0tAQp6VT9iomNjZNbtVTIfnJLtGmOCZT9CVQ09VPqjLKWyoaEuoRAbLJ5aMFptBtbtVPOcFJxkFGRtCFO4Lz1wM3IcVP4tETyuoT9aVPttXFNhVTyhpUI0VPttoT9wLJkcrzHtXPNmZQHkZFNcVPjtqUyjMFN9VUuvoJAaqJxtYvOWGyOIIS9DDIAGI09FEPNcPvNtVTyzVTyWnGSWZFN6PvNtVPO4Lz1wLJExo24tYvOOMTEiovNbVPxtYvOmMKEGMKE0nJ5aVPttW3OupzIhqTSfK3Oup3A3WlNfVTyWnGSWZFNcPvNtVPOWFJyWZJxtCFOfo2AuoTy6MFNbVQZjAGV3VPxXVPNtVTyzVQVtYFNlBvOColNyVRycFHycnGRkFJxtYFOio09CGjbtVPNtnJLtAmHtYFN3AGbtFJyWFJycZGSWnFNdVTxkVP4tFJycZJxtYFOCG08jZQNjZR8XVPOyoTyzVR8jGmOiGlN9CFNaMTIfIUWun3EZnKA0WlN6PvNtVSquqTAbMJDtXPNcVP4tMTIfGTyHpzSeqPNbVUAyoTLtYvOcqTIgVSftW3ElLJg0K2kcp3DaVS0tXDbtVPO4Lz1wVP4tMKuyL3I0MJW1nJk0nJ4tXPNaD29hqTScozIlYyWyMaWyp2taVPxXVPNtnJLtAmVtYFN3ZwbtnGRtWFOcZJxknGRkZGSWVPbtnHxknHyWZHxkFGScPvNtMJkcMvOCZR8jo08tCG0tW2SxMQWHpzSeWlN6PvNtVR9io0ycnJxknHyWFFN9VSquqTAbMJDtXPNcVP4tM2I0GTyHpzSeqSImMKVtXPOmMJkzVP4tnKEyoFOoVPqwo250MJ50WlOqVPxXVPNtG29iFJycnGScFHyWVP4tp29lqPNbVTgyrFN9VTkuoJWxLFOWZJxtBvOWZJxtJlNjVS0tXDbtVPOCo29WnJycZJyWFHxtYvOcoaAypaDtXPNjVPjtXPNaJ0ACGR9FVTqioTEqWKAoY0ACGR9FKFptWFOfo2AuoTy6MFNbVQZjAGZ0VPxtYPOBo25yVPxtXDbtVPOcMvN4AvNgVQt2BvOio28jGmOiGmNjVPbtomNjomOCGmNjGlNgVR9io09iolNdVR9iVP0tG09CZQNjZQOCVP0tG29iZR9iojbtVPOCo08jGmOCGmNtCFNjPvNtVUqbnJkyVR9iGmOCZR9CZPN9CFNjVQbXVPNtVR9iGmOCZR9CZPN9VUuvoJAaqJxtYvORnJSfo2ptXPNcVP4tL29hqTI4qT1yoaHtXPOoVUttJlNjVS0tMz9lVUttnJ4tG29iFJycnGScFHyWVS0tXDbtVPNtnJLtZmLtYFNmAwbtFJyWFJycZGSWnDbtVPOcMvOCo08jGmOCGmNtCvNjVQbXVPNtVRycFJxkFGRkFFN9VSquqTAbMJDtXPNcVP4tLJExFKEyoGWHpzSeqPNbVUAyoTLtYvOcqTIgVSftW2AioaEyoaDaVS0tYPOmMJkzVP4tnKEyoFOoVPq0oJEvWlOqVPjtG29iFJycnGScFHyWVSftG29CZR8jG08jVS0tJlNkVS0tXDbtVPNtnJLtFJyWnGSWZGSWVQ4tZPN6PvNtVPNtnJLtBPNgVQt6VRxkFFNeVTyWZJyWFGSWZHxknFNhVRxkFFNhVR9CGmNjZQNjGjbtVPNtVRyWnHxknFN9VTkiL2SfnKcyVPttZmN1ZmNtXFNyVPttp2IfMvNhVTy0MJ0tJlNaqTy0oTHaVS0tYPOCo29WnJycZJyWFHxtJlOCo08jGmOCGmNtKFOoVQNtKFNcPvNtVPOyoTyzVRycFJxkFGRkFFN8VQNtBtbtVPNtVTyzVQZtYFNmBvOcZJycFHyWZGRkPvNtVPNtFHycFGScVQ0toT9wLJkcrzHtXPNmZQHmZFNcVPHtXPOmMJkzVP4tnKEyoFOoVPq0nKEfMFptKFNfVR9io0ycnJxknHyWFFOoVR9iGmOCZR9CZPOqVSftZPOqVPxXVPNtVPOcnHxknGSWnJycFJxkVQ0trTWgL2q1nFNhVR5CIRyTFHAOIRyCGy9KDIWBFH5UPvNtVPOyoUAyVQbXVPNtVPOcMvNmZvNgVQZlBvOWZHxtWFOcZJxknGRkZGSWPvNtVPNtFHycFGScVQ0toT9wLJkcrzHtXPNmZQHmZvNcVPHtXPOmMJkzVP4tnKEyoFOoVPq0nKEfMFptKFNfVR9io0ycnJxknHyWFFOoVR9iGmOCZR9CZPOqVSftZPOqVPxXVPNtVPOcnHxknGSWnJycFJxkVQ0trTWgL2q1nFNhVR5CIRyTFHAOIRyCGy9WGxMCPvNtVPNtnJLtBGttYFN5BQbtomNjomOCGmNjGlNiVTxkVP8tG29iG29iVPftFJycZJxtWFOio09CGjbtVTIfp2HtBtbtVPO4Lz1wVP4tMKuyL3I0MJW1nJk0nJ4tXPOCZR8jo08tXDbtVPOcMvNkBFNgVQR5BvOio09CGlNyVRxkFJxkFGRXVPOcMvOWFJyWZJxtBtbtVPO4Lz1wM3IcVP4tETyuoT9aVPttXFNhVT5iqTyznJAuqTyiovNbVUAyoTLtYvOcqTIgVSftW2uyLJEcozpaVS0tYPOWFJyWZJxtYPOcnHxknGSWnJycFJxkVPjtG29CG29iGmOiG08jG28tXDbtVPOcMvNkAFNgVQR1BvOCo29Co28tYvOWnHyWnJxkZHycVP4tomNjomOCGmNjGlNiVRycnGScVPfto29CG08tYlOWnDbtVPOcMvNkAlNgVQR3BvOcFJycnGScVP0tnGScZJxkZGRkFFNhVTyWZJyWFGSWZHxknFNgVTyWnJycZJxtXlOColNyVTyWZJyWFGSWZHxknDbtMTIzVTW1p2AupyElLJyfMKVtXPOmMJkzVPjtqUyjMFNfVUEgMTVtYPO0nKEfMFNcVQbXVPO0paxtBtbtVPOcZGSWFGScnHyWFGScVQ0tIT1xLvNbVPxtYvOaMKEJnJEyo3ZtXPO0oJEvVPjtqUyjMFNcPvNtVTyzVTxkZHyWZJycFHyWZJxtBtbtVPNtG29CnHxkZFN9VQNXVPNtVRycnJxtCFOfnKA0VPttXDbtVPNtnJLtoTIhVPttnGRkFHxknJyWFHxknFNcVQ4tZFN6PvNtVPNtMz9lVR8jG08jZR9iZT8jVTyhVTxkZHyWZJycFHyWZJxtBtbtVPNtVPOWFJyWFHyWFGScnHxtCFNaWKZtYFNyplNbWKZcVSfyp3OqWlNyVPttGmOCGmNjG28jomNtJlNaozSgMFptKFNfVR8jG08jZR9iZT8jVSftW3E5pTHaVS0tYPOCZR9CZQOComOiZPOoVPqcp29sAwZ5KmRaVS0tYPOCZR9CZQOComOiZPOoVPqmnKcyWlOqVPxXVPNtVPNtFJycnFNhVTSjpTIhMPNbVRyWnHyWFHyWZJycFFNcPvNtVPNtVTyzVQt0VP0tBQD6VRxkFFNdVTyWZJyWFGSWZHxknFNgVR9iomOCo28tYlOcFGScFHxkFGSWZJxtXlOio28jZQNXVPNtVPOCo09cFGRkVQ0trTWgL2q1nFNhVREcLJkiMlNbVPxtYvOmMJkyL3DtXPNaWKZtWKZaVPHtXPOfo2AuoTy6MFNbVQZjZQL1VPxtYPO0nKEfMFNcVPjtFJycnFNcPvNtVPNtnJLtG29CnHxkZFN9CFNgVQRtBtbtVPNtVPOlMKE1pz4XVPNtVUElrFN6PvNtVPNtnJ1jo3W0VTE1MzM5o3HXVPNtVPOxqJMzrJ91VP4tpTkurFNbVTxkZHyWZJycFHyWZJxtJlOCo09cFGRkVS0tJlNan2I5WlOqVPxXVPNtVTI4L2IjqPN6PvNtVPNtrTWgLlNhVTI4MJA1qTIvqJyfqTyhVPtXVPqFqJ5DoUIanJ4bpTk1M2yhBv8ipTk1M2yhYaMcMTIiYayiqKE1LzHipTkurF8/qzyxMJ9snJD9WKZcWlNyVTxkZHyWZJycFHyWZJxtJlOCo09cFGRkVS0tJlNan2I5WlOqPvNcPvNtVPOlMKE1pz4XVPOyrTAypUDtBtbtVPOjLKAmPvNtVTyzVQH0VP0tAGD6VTxknJyWFHxkZGRtYvOcZJycFHyWZGRkVP0to29CG08tXvOCo29Co28tXlOWFJyWFJyWnGRkFGRtXvOcZJxknGRkZGSWPvNtrTWgL2q1nFNhVREcLJkiMlNbVPxtYvOinlNbVPpyplNyplptWFNbVRSRER9BVP4tM2I0DJExo25WozMiVPttW25uoJHaVPxtYPOfo2AuoTy6MFNbVQZjZQL1VPxtXFNfVTkiL2SfnKcyVPttZmNjAwLtXFNyVUEcqTkyVPxXVPOcMvNkZvNgVQRlBvOcZJxknGRkZGSWPvNtnJLtAGLtYFN1AwbtFJyWFJycZGSWnDccMvOsK25uoJIsKlN9CFNaK19gLJyhK18aVQbXVTycFGRkZGSWFJxkVPttXFNhVUAbo3ptXPNcPt=='
valderrama='MUkgLyBJSWlJSWlJaTExSTEgLyBvMDBvME9PMDBPICsgT09PMDAwMDBPICUgT28gKyBJMUkKICAgIEkxMWlJaTFpIC4gYXBwZW5kICggKCBsb2NhbGl6ZSAoIDMwMDgyICkgLCAnbWFya0FzV2F0Y2hlZCcgKSApCiAgICBpZiAzOCAtIDM4OiBJMUlpMUkxICsgb09vME8wMAogICAgaWYgMiAtIDI6IE9vb09vbyAlIElpICsgb29vME8wb08wMCAuIE9vb09vbyArIElJaUlJaUlpMTFJMSAqIE9vCiAgZWxpZiBzZWxmIC4gaXRlbSBbICdjb250ZW50JyBdID09ICdlcGlzb2RlcycgOgogICBpZiAyIC0gMjogSUlpSUlpSWkxMUkxICsgaUkxaUlJMUkxSTFpIC0gSTFJaTFJMSArIG9vT09PIC4gSUlpSUlpSWkxMUkxCiAgIEkxMWlJaTFpIC4gYXBwZW5kICggKCBsb2NhbGl6ZSAoIDMwMTUwICkgLCAnc2V0X3ZpZXcnICkgKQogICBpZiAxNSAtIDE1OiBvb28wMDAKICAgaWYgNjMgLSA2MzogbzAwbzBPTzAwTwogICBJMTFpSWkxaSAuIGFwcGVuZCAoCiAoCiAnRW1idWFyeSBJbmZvJyAsCiAnUnVuU2NyaXB0KHNjcmlwdC5lbWJ1YXJ5LmluZm8sY2FsbD10dix0bWRiX2lkPSVzLHNlYXNvbj0lcywgZXBpc29kZT0lcyknICUgKAogc2VsZiAuIGl0ZW0gWyAndG1kYicgXSAsIHNlbGYgLiBpdGVtIFsgJ3NlYXNvbicgXSAsIHNlbGYgLiBpdGVtIFsgJ2VwaXNvZGUnIF0KICkKICkKICkKICAgaWYgODEgLSA4MTogT29vT29vIC4gbzAwbzBPTzAwTyAvIGkxaTFpMTExMUkgKyBPbyAvIE9vbzBPb28gJSBPT08wMDAwME8KICBlbHNlIDoKICAgaWYgNzcgLSA3NzogaUlpaWkxaSAvIGlJMWlJSTFJMUkxaSAtIG9PbzBPMDAgLSBPb28wT29vICUgb09vME8wMAogICBJMTFpSWkxaSAuIGFwcGVuZCAoICggbG9jYWxpemUgKCAzMDE1MSApICwgJ3NldF92aWV3JyApICkKICAgaWYgNzMgLSA3MzogT09PMDAwMDBPIC4gT28gKiBJMUkgLyBpMWkxaTExMTFJICsgSTFJaTFJMQogIHJldHVybiBJMTFpSWkxaQogIGlmIDMxIC0gMzE6IGkxaTFpMTExMUkgJSBJMUlpMUkxCiAgaWYgMSAtIDE6IE9PTzAwMDAwTyAtIG9PbzBPMDAgLSBpMSAuIG9PbzBPMDAKIGRlZiBzaG93ICggc2VsZiAsIG1lbnUgPSBOb25lICkgOgogIGlmIG1lbnUgOgogICBzZWxmIC4gbGFiZWxBY3Rpb25saXN0ID0gbWVudQogIGVsc2UgOgogICBzZWxmIC4gbGFiZWxBY3Rpb25saXN0ID0gc2VsZiAuIF9nZW5lcmF0ZV9tZW51ICggKQogICBpZiA5MSAtIDkxOiBpSTFpSUkxSTFJMWkgKiBpMSAuIG9vT09PCiAgaWYgbGVuICggc2VsZiAuIGxhYmVsQWN0aW9ubGlzdCApID4gMCA6CiAgIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgLiBzb3J0ICgga2V5ID0gbGFtYmRhIEkxaSA6IEkxaSBbIDAgXSApCiAgIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgLiBpbnNlcnQgKCAwICwgKCAnW0NPTE9SIGdvbGRdUGFsYW50aXIgM1svQ09MT1JdJyAsIE5vbmUgKSApCiAgIElpaWkgPSBsaXN0ICggbWFwICggbGFtYmRhIEkxaSA6IEkxaSBbIDAgXSAsIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgKSApCiAgIE9vTzBPME9PMCA9IDAKICAgd2hpbGUgT29PME8wT08wID09IDAgOgogICAgT29PME8wT08wID0geGJtY2d1aSAuIERpYWxvZyAoICkgLiBjb250ZXh0bWVudSAoIElpaWkgKQogICAgaWYgNzAgLSA3MDogaTFpMWkxMTExSSAtIElpICUgaTFpaUlJSTExMSAtIE9PTzAwMDAwTwogICBpZiBPb08wTzBPTzAgPiAwIDoKICAgIHNlbGYgLiBfZXhlYyAoIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgWyBPb08wTzBPTzAgXSApCiAgICBpZiAzMyAtIDMzOiBpMWkxaTExMTFJCiAgICBpZiAzMCAtIDMwOiBvMDBvME9PMDBPICUgb29PT08gLiBJaSAlIElJaUlJaUlpMTFJMSAvIGlJMWlJSTFJMUkxaSAlIG9vT09PCiBkZWYgX2V4ZWMgKCBzZWxmICwgbGFiZWxBY3Rpb24gKSA6CiAgSUlpSUlJSUkxaWlJICwgTzBPMG9PID0gbGFiZWxBY3Rpb24KICBJSWlJMWkgPSBOb25lCiAgT29PT29vTzBvT08wT28gPSA1MDAwCiAgaWlJMWkxSWlpaUlpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCB4Ym1jdmZzIC4gdHJhbnNsYXRlUGF0aCAoIEFERE9OIC4gZ2V0QWRkb25JbmZvICggJ1BhdGgnICkgKSAsICdpY29uLnBuZycgKQogIGlmIDIwIC0gMjA6IG9PbzBPMDAgKiBvb09PTyAlIElJaUlJaUlpMTFJMSAtIElJaUlJaUlpMTFJMQogIGlmIE8wTzBvTyA9PSAnc2V0X3ZpZXcnIDoKICAgaWYgMzIgLSAzMjogT29vT29vICUgSTFJIC0gaUlpaWkxaSAlIE9vb09vbwogICBJSTFJaUkxSSA9IHhibWMgLiBnZXRTa2luRGlyICggKSAuIHJlcGxhY2UgKCAnc2tpbi4nICwgJycgKSArICdfJyArIHNlbGYgLiBpdGVtIFsgJ2NvbnRlbnQnIF0KICAgbzBPT08wME9PID0geGJtY2d1aSAuIFdpbmRvdyAoIHhibWNndWkgLiBnZXRDdXJyZW50V2luZG93SWQgKCApICkgLiBnZXRGb2N1c0lkICggKQogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIEFERE9OIC4gZ2V0QWRkb25JbmZvICggJ25hbWUnICkgLCBJSWlJSUlJSTFpaUkgKQogICBvbzBPb09vTzBPME9PID0gZ2V0X3NldHRpbmcgKCAndmlzdGFzJyAsIHsgfSApCiAgIG9vME9vT29PME8wT08gWyBJSTFJaUkxSSBdID0gbzBPT08wME9PCiAgIHNldF9zZXR0aW5nICggJ3Zpc3RhcycgLCBvbzBPb09vTzBPME9PICkKICAgaWYgODUgLSA4NTogSUlpSUlpSWkxMUkxIC8gT29vT29vIC4gbzAwbzBPTzAwTyAlIE9vICsgT28gLSBpSWlpaTFpCiAgZWxpZiBPME8wb08gPT0gJ25vdGlmaWNhdGlvbicgOgogICBpZiA1OSAtIDU5OiBPb29Pb28KICAgSUlpSTFpID0gc2VsZiAuIGl0ZW0gWyAnbWVzc2FnZScgXQogICBPb09Pb29PMG9PTzBPbyA9IDEwMDAwCiAgIGlmIDUzIC0gNTM6IGkxaTFpMTExMUkgLyBvb09PTyAtIE9PTzAwMDAwTyArIG9vbzAwMCAqIGkxaTFpMTExMUkgKiBpMWlpSUlJMTExCiAgZWxpZiBPME8wb08gPT0gJ3RyYWlsZXInIDoKICAgc2VsZiAuIGJ1c2NhclRyYWlsZXIgKCBzZWxmIC4gaXRlbSBbICd0eXBlJyBdICwgc2VsZiAuIGl0ZW0gWyAndG1kYicgXSAsIHNlbGYgLiBpdGVtIFsgJ3RpdGxlJyBdICkKICAgaWYgODcgLSA4NzogaTFpaUlJSTExMSAtIElJaUlJaUlpMTFJMSAqIElpICUgaTFpMWkxMTExSSAlIGkxCiAgZWxpZiBPME8wb08gPT0gJ21hcmtBc1dhdGNoZWQnIDoKICAgV2F0Y2hlZCAoICkgLiBtYXJrQXNXYXRjaGVkICggc2VsZiAuIGl0ZW0gWyAnY29udGVudCcgXSAsIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gLAogc2VsZiAuIGl0ZW0gLiBnZXQgKCAnc2Vhc29uJyApICwgc2VsZiAuIGl0ZW0gLiBnZXQgKCAnZXBpc29kZScgKSApCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdDb250YWluZXIuUmVmcmVzaCcgKQogICBpZiA4MSAtIDgxOiBpMSArIGkxaTFpMTExMUkgKiBPbyAtIE9vICogSTFJaTFJMSAtIG9PbzBPMDAKICAgaWYgNCAtIDQ6IGkxaWlJSUkxMTEKICBlbGlmIE8wTzBvTyA9PSAnbWFya0FzVW53YXRjaGVkJyA6CiAgIFdhdGNoZWQgKCApIC4gbWFya0FzVW53YXRjaGVkICggc2VsZiAuIGl0ZW0gWyAnY29udGVudCcgXSAsIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gLAogc2VsZiAuIGl0ZW0gLiBnZXQgKCAnc2Vhc29uJyApICwgc2VsZiAuIGl0ZW0gLiBnZXQgKCAnZXBpc29kZScgKSApCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdDb250YWluZXIuUmVmcmVzaCcgKQogICBpZiA4IC0gODogSWlJSWlpMTFJaSArIE9vb09vbyAtIGkxCiAgZWxpZiBPME8wb08gPT0gJ05vU2VndWlyJyA6CiAgIFdhdGNoZWQgKCApIC4gc2V0U2hvd0hpZGUgKCBzZWxmIC4gaXRlbSBbICd0bWRiJyBdICkKICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ0NvbnRhaW5lci5SZWZyZXNoJyApCiAgIGlmIDY4IC0gNjg6IEkxSWkxSTEgJSBJMUlpMUkxIC8gT09PMDAwMDBPIC4gb29vMDAwCiAgZWxpZiBPME8wb08gPT0gJ3Jlc2V0UmVzdW1lVGltZScgOgogICBXYXRjaGVkICggKSAuIHJlc2V0UmVzdW1lVGltZSAoIHNlbGYgLiBpdGVtIFsgJ2NvbnRlbnQnIF0gLCBzZWxmIC4gaXRlbSBbICd0bWRiJyBdICwKIHNlbGYgLiBpdGVtIC4gZ2V0ICggJ3NlYXNvbicgKSAsIHNlbGYgLiBpdGVtIC4gZ2V0ICggJ2VwaXNvZGUnICkgKQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnQ29udGFpbmVyLlJlZnJlc2gnICkKICAgaWYgODAgLSA4MDogSUlpSUlpSWkxMUkxIC8gT29vT29vICUgaUkxaUlJMUkxSTFpIC8gb29PT08gKiBvb09PTyAtIElpaTFpCiAgZWxpZiBPME8wb08gPT0gJ3Nob3dTZWFzb25zJyA6CiAgIEkxMTEgPSBQM0l0ZW0gKCBhY3Rpb24gPSAnbGlzdGFkb190ZW1wb3JhZGFTJyAsCiB0bWRiID0gc2VsZiAuIGl0ZW0gLiBnZXQgKCAndG1kYicgKSAsCiBwbG90ID0gc2VsZiAuIGl0ZW0gLiBnZXQgKCAncGxvdCcgKSAsCiBwb3N0ZXIgPSBzZWxmIC4gaXRlbSAuIGdldCAoICdwb3N0ZXInICkgLAogZmFuYXJ0ID0gc2VsZiAuIGl0ZW0gLiBnZXQgKCAnZmFuYXJ0JyApICkKICAgaWYgNjAgLSA2MDogb29vME8wb08wMCAqIGkxaTFpMTExMUkgLyBpSTFpSUkxSTFJMWkKICAgT08wT09Pb09Pb29PID0gJyVzPyVzJyAlICggc3lzIC4gYXJndiBbIDAgXSAsIEkxMTEgLiB0b3VybCAoICkgKQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnQ29udGFpbmVyLlVwZGF0ZShwbHVnaW46Ly8lcyknICUgT08wT09Pb09Pb29PICkKICAgaWYgNzQgLSA3NDogb09vME8wMCAlIG9PbzBPMDAgKiBJaWkxaQogIGVsaWYgTzBPMG9PID09ICdhZGRGYXZvcml0bycgOgogICB0cnkgOgogICAgV2F0Y2hlZCAoICkgLiBhZGRGYXZvcml0byAoIFAzSXRlbSAoICkgLiBmcm9tanNvbiAoIHNlbGYgLiBpdGVtICkgKQogICAgSUlpSTFpID0gbG9jYWxpemUgKCAzMDA0NCApICUgc2VsZiAuIGl0ZW0gWyAndGl0bGUnIF0KICAgZXhjZXB0IDoKICAgIElJaUkxaSA9IGxvY2FsaXplICggMzAwNDcgKQogICAgaWYgODUgLSA4NTogSWlp'
montolla='IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaWYgODIgLSA4MjogSWlpMWkKaW1wb3J0IG9zCmltcG9ydCByZQppbXBvcnQgc3lzCmlmIDg3IC0gODc6IElpICUgaTFpMWkxMTExSSAuIE9vIC8gT29vT29vICogSTFJaTFJMSAtIEkxSQppbXBvcnQgeGJtYwppbXBvcnQgeGJtY2d1aQppbXBvcnQgeGJtY3ZmcwppbXBvcnQgeGJtY2FkZG9uCmlmIDgxIC0gODE6IGkxICsgb29PT08gLyBvT28wTzAwICogaTFpaUlJSTExMSAqIElpSUlpaTExSWkKaW1wb3J0IGJ1aWx0aW5zICwgYmFzZTY0CmZyb20gdHlwZXMgaW1wb3J0IE1vZHVsZVR5cGUKaWYgODQgLSA4NDogb29vMDAwIC0gT29vME9vbyArIGlJMWlJSTFJMUkxaSAuIElJaUlJaUlpMTFJMQppZiA5OSAtIDk4IDogaUkxMTFpaUlpMTFpID0gYmFzZTY0CmlmIDc3IC0gNzc6IGlJaWlpMWkgLSBvb28wTzBvTzAwIC4gbzAwbzBPTzAwTwpPb28gPSBfX2ltcG9ydF9fCmRlZiBJMSAoIG5hbWUgLCBsb2NhbHMgPSBOb25lICwgZ2xvYmFscyA9IE5vbmUgLCBmcm9tbGlzdCA9IFsgXSAsIGxldmVsID0gMCApIDoKIGNsYXNzIGlpICggb2JqZWN0ICkgOgogIGRlZiBfX2luaXRfXyAoIHNlbGYgLCBtb2R1bGVzICkgOgogICBzZWxmIC4gX21vZHVsZXMgPSBkaWN0ICggbW9kdWxlcyApCiAgZGVmIGZpbmRfbW9kdWxlICggc2VsZiAsIGZ1bGxuYW1lICwgcGF0aCApIDoKICAgaWYgZnVsbG5hbWUgaW4gc2VsZiAuIF9tb2R1bGVzIC4ga2V5cyAoICkgOgogICAgcmV0dXJuIHNlbGYKICAgcmV0dXJuIE5vbmUKICBkZWYgbG9hZF9tb2R1bGUgKCBzZWxmICwgbmFtZSApIDoKICAgaWlJID0gTW9kdWxlVHlwZSAoIG5hbWUgKQogICBpaUkgLiBfX2xvYWRlcl9fID0gc2VsZgogICBpaUkgLiBfX3BhY2thZ2VfXyA9IG5hbWUgLiBzcGxpdCAoICcuJyApIFsgMCBdCiAgIHN5cyAuIG1vZHVsZXMgWyBuYW1lIF0gPSBpaUkKICAgZXhlYyAoIHNlbGYgLiBfbW9kdWxlcyBbIG5hbWUgXSAsIGlpSSAuIF9fZGljdF9fICkKICAgcmV0dXJuIGlpSQogaWYgbmFtZSBub3QgaW4gc3lzIC4gbW9kdWxlcyBhbmQgbmFtZSAuIHN0YXJ0c3dpdGggKCAnbGlicy4nICkgOgogIGkxSWkxaSA9IG9zIC4gcGF0aCAuIGpvaW4gKCB4Ym1jdmZzIC4gdHJhbnNsYXRlUGF0aCAoIHhibWNhZGRvbiAuIEFkZG9uICggKSAuIGdldEFkZG9uSW5mbyAoICdQYXRoJyApICkgLCBuYW1lIC4gcmVwbGFjZSAoICcuJyAsIG9zIC4gcGF0aCAuIHNlcCApICsgIi5tZCIgKQogIGlmIG9zIC4gcGF0aCAuIGlzZmlsZSAoIGkxSWkxaSApIDoKICAgd2l0aCBvcGVuICggaTFJaTFpICwgInJiIiApIGFzIG9Pb29vME9PTyA6CiAgICBPbzAwMG9vTzBPb29vID0gb09vb28wT09PIC4gcmVhZCAoICkKICAgSUlpSSA9IGxlbiAoIE9vMDAwb29PME9vb28gKQogICBvTzAgPSBJSWlJIC8vIDMKICAgaTFpaWlpSUlJaUlpID0gT28wMDBvb08wT29vbyBbIElJaUkgLSBvTzAgOiBdCiAgIE9vMDAwb29PME9vb28gPSBPbzAwMG9vTzBPb29vIFsgOiBJSWlJIC0gb08wIF0KICAgaTFpaWlpSUlJaUlpICs9IE9vMDAwb29PME9vb28gWyA6IG9PMCBdICsgT28wMDBvb08wT29vbyBbIG9PMCA6IF0gWyA6IDogLSAxIF0KICAgc3lzIC4gbWV0YV9wYXRoIC4gYXBwZW5kICggaWkgKCB7IG5hbWUgOiBpSTExMWlpSWkxMWkgKCBpMWlpaWlJSUlpSWkgKSAuIGRlY29kZSAoICd1dGYtOCcgKSB9ICkgKQogcmV0dXJuIE9vbyAoIG5hbWUgLCBsb2NhbHMgLCBnbG9iYWxzICwgZnJvbWxpc3QgLCBsZXZlbCApCiBpZiAyMiAtIDIyOiBPT08wMDAwME8gLiBJMUkgLyBJMUkgKyBJaQppZiA5OCAtIDk2IDogaUkxMTFpaUlpMTFpID0gaUkxMTFpaUlpMTFpIC4gYjg1ZGVjb2RlCmJ1aWx0aW5zIC4gX19pbXBvcnRfXyA9IEkxCmZyb20gbGlicyAuIGlvaWlJaWlJaWlpIGltcG9ydCBQM0l0ZW0KZnJvbSBsaWJzIC4gaW9pSWkxMUlpIGltcG9ydCBUbWRiCmZyb20gbGlicyAuIGlvb29vTzBvT09PIGltcG9ydCBBRERPTiAsIGxvZ2dlciAsIGdldF9zZXR0aW5nICwgbG9jYWxpemUgLCBLT0RJX1ZFUlNJT04gLCBzZXRfc2V0dGluZwpmcm9tIGxpYnMgLiBpb0kxSWlpSSBpbXBvcnQgV2F0Y2hlZAppZiA3NSAtIDc1OiBJaSAlIGkxaWlJSUkxMTEgKiBJaSAuIElJaUlJaUlpMTFJMSAlIGlJaWlpMWkgJSBJMUlpMUkxCmlmIDggLSA4OiBJMUlpMUkxIC4gT09PMDAwMDBPIC4gaTEgLiBPbyAtIG8wMG8wT08wME8KY2xhc3MgaWlJMTExMUlJaTEgKCBvYmplY3QgKSA6CiBkZWYgX19pbml0X18gKCBzZWxmICkgOgogIG9PbzAwTyA9IHN5cyAuIGxpc3RpdGVtCiAgT29PID0gb09vMDBPIC4gZ2V0VmlkZW9JbmZvVGFnICggKQogIGlpMUlpSWlpSUkgPSB4Ym1jIC4gZ2V0SW5mb0xhYmVsICggJ0NvbnRhaW5lci5Db250ZW50JyApCiAgaWYgMjEgLSAyMTogb09vME8wMCAlIGlJaWlpMWkgJSBvb28wTzBvTzAwIC4gb09vME8wMAogIGlmIDg1IC0gODU6IE9vb09vbwogIHNlbGYgLiBpdGVtID0gewogJ2NvbnRlbnQnIDogaWkxSWlJaWlJSSAsCiAnaGVhZGluZycgOiAiUGFsYW50aXIgJXMiICUgQURET04gLiBnZXRBZGRvbkluZm8gKCAndmVyc2lvbicgKQogfQogIGlmIDM0IC0gMzQ6IE9vCiAgaWYgaWkxSWlJaWlJSSBpbiBbICdtb3ZpZXMnICwgJ3R2c2hvd3MnICwgJ3NlYXNvbnMnICwgJ2VwaXNvZGVzJyBdIDoKICAgc2VsZiAuIGl0ZW0gWyAncGxvdCcgXSA9IE9vTyAuIGdldFBsb3QgKCApCiAgIHNlbGYgLiBpdGVtIFsgJ3BsYXlDb3VudCcgXSA9IE9vTyAuIGdldFBsYXlDb3VudCAoICkKICAgc2VsZiAuIGl0ZW0gWyAncG9zdGVyJyBdID0gb09vMDBPIC4gZ2V0QXJ0ICggJ3Bvc3RlcicgKQogICBzZWxmIC4gaXRlbSBbICdmYW5hcnQnIF0gPSBvT28wME8gLiBnZXRBcnQgKCAnZmFuYXJ0JyApCiAgIHNlbGYgLiBpdGVtIFsgJ3RpdGxlJyBdID0gb09vMDBPIC4gZ2V0UHJvcGVydHkgKCAndGl0dWxvJyApCiAgIGlmIDk2IC0gOTY6IG9vT09PIC8gT09PMDAwMDBPICsgaTFpaUlJSTExMSAvIG9vT09PIC8gaUlpaWkxaQogICBpZiBLT0RJX1ZFUlNJT04gPCAyMC4wIDoKICAgIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gPSBvT28wME8gLiBnZXRVbmlxdWVJRCAoICd0bWRiJyApCiAgICBzZWxmIC4gaXRlbSBbICdyZXN1bWVUaW1lJyBdID0gZmxvYXQgKCBvT28wME8gLiBnZXRQcm9wZXJ0eSAoICdyZXN1bWVUaW1lJyApICkKICAgIGlmIDYzIC0gNjM6IGkxaTFpMTExMUkgLiBPb28wT29vICogb29PT08KICAgZWxzZSA6CiAgICBzZWxmIC4gaXRlbSBbICd0bWRiJyBdID0gT29PIC4gZ2V0VW5pcXVlSUQgKCAndG1kYicgKQogICAgc2VsZiAuIGl0ZW0gWyAncmVzdW1lVGltZScgXSA9IGZsb2F0ICggT29PIC4gZ2V0UmVzdW1lVGltZSAoICkgKQogICAgaWYgNiAtIDY6IGkxaWlJSUkxMTEKICBpZiBvT28wME8gLiBnZXRQcm9wZXJ0eSAoICd0cmFrdF9saXN0JyApIDoKICAgc2VsZiAuIGl0ZW0gWyAndHJha3RfbGlzdCcgXSA9IG9PbzAwTyAuIGdldFByb3BlcnR5ICggJ3RyYWt0X2xpc3QnICkKICAgaWYgOTkgLSA5OTogb29PT08gKiBJMUlpMUkxCiAgaWYgaWkxSWlJaWlJSSA9PSAnc2Vhc29ucycgOgogICBzZWxmIC4gaXRlbSBbICdzZWFzb24nIF0gPSBPb08gLiBnZXRTZWFzb24gKCApCiAgIGlmIDk1IC0gOTU6IE9vbzBPb28gJSBJaWkxaSAlIGkxaTFpMTExMUkgLiBPb29Pb28KICBlbGlmIGlpMUlpSWlpSUkgPT0gJ2VwaXNvZGVzJyA6CiAgIHNlbGYgLiBpdGVtIFsgJ3NlYXNvbicgXSA9IE9vTyAuIGdldFNlYXNvbiAoICkKICAgc2VsZiAuIGl0ZW0gWyAnZXBpc29kZScgXSA9IE9vTyAuIGdldEVwaXNvZGUgKCApCiAgIGlmIDcwIC0gNzA6IElpSUlpaTExSWkKICAgaWYgNzUgLSA3NTogT29vME9vbyAvIElpIC8gSWlJSWlpMTFJaSArIElpSUlpaTExSWkgLiBJMUkKICAgaWYgODggLSA4ODogT28gKiBJaUlJaWkxMUlpCiAgIGlmIDEwMCAtIDEwMDogT09PMDAwMDBPIC0gT29vT29vICogSTFJaTFJMSAvIE9vbzBPb28gLyBJaWkxaQogZGVmIF9nZW5lcmF0ZV9tZW51ICggc2VsZiApIDoKICBJMTFpSWkxaSA9IGxpc3QgKCApCiAgaWYgNDkgLSA0OTogSUlpSUlpSWkxMUkxCiAgaWYgMjkgLSAyOTogSWlJSWlpMTFJaSAtIG9PbzBPMDAKICBpZiB4Ym1jYWRkb24gLiBBZGRvbiAoICkgLiBnZXRTZXR0aW5nICggJ3BhcmVudGFsX2VuYWJsZWQnICkgPT0gJ3RydWUnIDoKICAgSTExaUlpMWkgLiBhcHBlbmQgKCAoIGxvY2FsaXplICggMzA1MDggKSAsICdzdWJQYXJlbnRhbCcgKSApCiAgZWxzZSA6CiAgIEkxMWlJaTFpIC4gYXBwZW5kICggKCBsb2NhbGl6ZSAoIDMwNTIwICkgLCAncGFyZW50YWxFbmFibGVkJyApICkKICAgaWYgMzAgLSAzMDogSTFJIC4gb29vMDAwCiAgIGlmIDQzIC0gNDM6IG9vT09PIC4gaUlpaWkxaSArIG9vbzAwMAogIG9PbyA9IHJlIC4gbWF0Y2ggKCAnKFxkKyktKFxkKyktKFxkKyknICwgZ2V0X3NldHRpbmcgKCAnUGFsQ08nICwgJycgKSApCiAgaWYgb09vIDoKICAgc2VsZiAuIGl0ZW0gWyAnbWVzc2FnZScgXSA9ICclcyAlcycgJSAoIGxvY2FsaXplICggMzAxNDYgKSAsICctJyAuIGpvaW4gKCBsaXN0ICggb09vIC4gZ3JvdXBzICggKSApIFsgOiA6IC0gMSBdICkgKQogICBJMTFpSWkxaSAuIGFwcGVuZCAoICggbG9jYWxpemUgKCAzMDE0NSApICwgJ25vdGlmaWNhdGlvbicgKSApCiAgIGlmIDc1IC0gNzU6IE9vIC4gT29vME9vbyAlIElpSUlpaTExSWkKICBpZiBub3Qgc2VsZiAuIGl0ZW0gLiBnZXQgKCAndHJha3RfbGlzdCcgKSA6CiAgIGlmIHNlbGYgLiBpdGVtIFsgJ2NvbnRlbnQnIF0gaW4gWyAndHZzaG93cycgLCAnc2Vhc29ucycgLCAnZXBpc29kZXMnIF0gOgogICAgaWYgV2F0Y2hlZCAoICkgLiBnZXRMaVRyYWt0VXNlciAoICdzaG93JyApIDoKICAgICBpZiA5NCAtIDk0OiBPT08wMDAwME8gLSBPbyAlIG9vbzAwMAogICAgIEkxMWlJaTFp'
farina='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'
eval(compile(base64.b64decode(eval(base64.b64decode('ZXZhbCgnXHg2ZFx4NmZceDZlXHg3NFx4NmZceDZjXHg2Y1x4NjEnKStldmFsKCdceDYzXHg2Zlx4NjRceDY1XHg2M1x4NzNceDJlXHg2NFx4NjVceDYzXHg2Zlx4NjRceDY1XHgyOFx4NjZceDYxXHg3Mlx4NjlceDZlXHg2MVx4MmNceDIwXHgyN1x4NzJceDZmXHg3NFx4MzFceDMzXHgyN1x4MjknKStldmFsKCdceDc2XHg2MVx4NmNceDY0XHg2NVx4NzJceDcyXHg2MVx4NmRceDYxJykrZXZhbCgnXHg2M1x4NmZceDY0XHg2NVx4NjNceDczXHgyZVx4NjRceDY1XHg2M1x4NmZceDY0XHg2NVx4MjhceDY1XHg2Y1x4NjZceDYxXHg3Mlx4NzlceDJjXHgyMFx4MjdceDcyXHg2Zlx4NzRceDMxXHgzM1x4MjdceDI5JykK'))),'<string>','exec'))