# -*- coding: utf-8 -*-
#############################################################
#  context
#############################################################
import base64, codecs
elfary='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'
valderrama='kxSSAvIElJaUlJaUlpMTFJMSAvIG8wMG8wT08wME8gKyBPT08wMDAwME8gJSBPbyArIEkxSQogICAgSTExaUlpMWkgLiBhcHBlbmQgKCAoIGxvY2FsaXplICggMzAwODIgKSAsICdtYXJrQXNXYXRjaGVkJyApICkKICAgIGlmIDM4IC0gMzg6IEkxSWkxSTEgKyBvT28wTzAwCiAgICBpZiAyIC0gMjogT29vT29vICUgSWkgKyBvb28wTzBvTzAwIC4gT29vT29vICsgSUlpSUlpSWkxMUkxICogT28KICBlbGlmIHNlbGYgLiBpdGVtIFsgJ2NvbnRlbnQnIF0gPT0gJ2VwaXNvZGVzJyA6CiAgIGlmIDIgLSAyOiBJSWlJSWlJaTExSTEgKyBpSTFpSUkxSTFJMWkgLSBJMUlpMUkxICsgb29PT08gLiBJSWlJSWlJaTExSTEKICAgSTExaUlpMWkgLiBhcHBlbmQgKCAoIGxvY2FsaXplICggMzAxNTAgKSAsICdzZXRfdmlldycgKSApCiAgIGlmIDE1IC0gMTU6IG9vbzAwMAogICBpZiA2MyAtIDYzOiBvMDBvME9PMDBPCiAgIEkxMWlJaTFpIC4gYXBwZW5kICgKICgKICdFbWJ1YXJ5IEluZm8nICwKICdSdW5TY3JpcHQoc2NyaXB0LmVtYnVhcnkuaW5mbyxjYWxsPXR2LHRtZGJfaWQ9JXMsc2Vhc29uPSVzLCBlcGlzb2RlPSVzKScgJSAoCiBzZWxmIC4gaXRlbSBbICd0bWRiJyBdICwgc2VsZiAuIGl0ZW0gWyAnc2Vhc29uJyBdICwgc2VsZiAuIGl0ZW0gWyAnZXBpc29kZScgXQogKQogKQogKQogICBpZiA4MSAtIDgxOiBPb29Pb28gLiBvMDBvME9PMDBPIC8gaTFpMWkxMTExSSArIE9vIC8gT29vME9vbyAlIE9PTzAwMDAwTwogIGVsc2UgOgogICBpZiA3NyAtIDc3OiBpSWlpaTFpIC8gaUkxaUlJMUkxSTFpIC0gb09vME8wMCAtIE9vbzBPb28gJSBvT28wTzAwCiAgIEkxMWlJaTFpIC4gYXBwZW5kICggKCBsb2NhbGl6ZSAoIDMwMTUxICkgLCAnc2V0X3ZpZXcnICkgKQogICBpZiA3MyAtIDczOiBPT08wMDAwME8gLiBPbyAqIEkxSSAvIGkxaTFpMTExMUkgKyBJMUlpMUkxCiAgcmV0dXJuIEkxMWlJaTFpCiAgaWYgMzEgLSAzMTogaTFpMWkxMTExSSAlIEkxSWkxSTEKICBpZiAxIC0gMTogT09PMDAwMDBPIC0gb09vME8wMCAtIGkxIC4gb09vME8wMAogZGVmIHNob3cgKCBzZWxmICwgbWVudSA9IE5vbmUgKSA6CiAgaWYgbWVudSA6CiAgIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgPSBtZW51CiAgZWxzZSA6CiAgIHNlbGYgLiBsYWJlbEFjdGlvbmxpc3QgPSBzZWxmIC4gX2dlbmVyYXRlX21lbnUgKCApCiAgIGlmIDkxIC0gOTE6IGlJMWlJSTFJMUkxaSAqIGkxIC4gb29PT08KICBpZiBsZW4gKCBzZWxmIC4gbGFiZWxBY3Rpb25saXN0ICkgPiAwIDoKICAgc2VsZiAuIGxhYmVsQWN0aW9ubGlzdCAuIHNvcnQgKCBrZXkgPSBsYW1iZGEgSTFpIDogSTFpIFsgMCBdICkKICAgc2VsZiAuIGxhYmVsQWN0aW9ubGlzdCAuIGluc2VydCAoIDAgLCAoICdbQ09MT1IgZ29sZF1QYWxhbnRpciAzWy9DT0xPUl0nICwgTm9uZSApICkKICAgSWlpaSA9IGxpc3QgKCBtYXAgKCBsYW1iZGEgSTFpIDogSTFpIFsgMCBdICwgc2VsZiAuIGxhYmVsQWN0aW9ubGlzdCApICkKICAgT29PME8wT08wID0gMAogICB3aGlsZSBPb08wTzBPTzAgPT0gMCA6CiAgICBPb08wTzBPTzAgPSB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIGNvbnRleHRtZW51ICggSWlpaSApCiAgICBpZiA3MCAtIDcwOiBpMWkxaTExMTFJIC0gSWkgJSBpMWlpSUlJMTExIC0gT09PMDAwMDBPCiAgIGlmIE9vTzBPME9PMCA+IDAgOgogICAgc2VsZiAuIF9leGVjICggc2VsZiAuIGxhYmVsQWN0aW9ubGlzdCBbIE9vTzBPME9PMCBdICkKICAgIGlmIDMzIC0gMzM6IGkxaTFpMTExMUkKICAgIGlmIDMwIC0gMzA6IG8wMG8wT08wME8gJSBvb09PTyAuIElpICUgSUlpSUlpSWkxMUkxIC8gaUkxaUlJMUkxSTFpICUgb29PT08KIGRlZiBfZXhlYyAoIHNlbGYgLCBsYWJlbEFjdGlvbiApIDoKICBJSWlJSUlJSTFpaUkgLCBPME8wb08gPSBsYWJlbEFjdGlvbgogIElJaUkxaSA9IE5vbmUKICBPb09Pb29PMG9PTzBPbyA9IDUwMDAKICBpaUkxaTFJaWlpSWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIHhibWN2ZnMgLiB0cmFuc2xhdGVQYXRoICggQURET04gLiBnZXRBZGRvbkluZm8gKCAnUGF0aCcgKSApICwgJ2ljb24ucG5nJyApCiAgaWYgMjAgLSAyMDogb09vME8wMCAqIG9vT09PICUgSUlpSUlpSWkxMUkxIC0gSUlpSUlpSWkxMUkxCiAgaWYgTzBPMG9PID09ICdzZXRfdmlldycgOgogICBpZiAzMiAtIDMyOiBPb29Pb28gJSBJMUkgLSBpSWlpaTFpICUgT29vT29vCiAgIElJMUlpSTFJID0geGJtYyAuIGdldFNraW5EaXIgKCApIC4gcmVwbGFjZSAoICdza2luLicgLCAnJyApICsgJ18nICsgc2VsZiAuIGl0ZW0gWyAnY29udGVudCcgXQogICBvME9PTzAwT08gPSB4Ym1jZ3VpIC4gV2luZG93ICggeGJtY2d1aSAuIGdldEN1cnJlbnRXaW5kb3dJZCAoICkgKSAuIGdldEZvY3VzSWQgKCApCiAgIHhibWNndWkgLiBEaWFsb2cgKCApIC4gbm90aWZpY2F0aW9uICggQURET04gLiBnZXRBZGRvbkluZm8gKCAnbmFtZScgKSAsIElJaUlJSUlJMWlpSSApCiAgIG9vME9vT29PME8wT08gPSBnZXRfc2V0dGluZyAoICd2aXN0YXMnICwgeyB9ICkKICAgb28wT29Pb08wTzBPTyBbIElJMUlpSTFJIF0gPSBvME9PTzAwT08KICAgc2V0X3NldHRpbmcgKCAndmlzdGFzJyAsIG9vME9vT29PME8wT08gKQogICBpZiA4NSAtIDg1OiBJSWlJSWlJaTExSTEgLyBPb29Pb28gLiBvMDBvME9PMDBPICUgT28gKyBPbyAtIGlJaWlpMWkKICBlbGlmIE8wTzBvTyA9PSAnbm90aWZpY2F0aW9uJyA6CiAgIGlmIDU5IC0gNTk6IE9vb09vbwogICBJSWlJMWkgPSBzZWxmIC4gaXRlbSBbICdtZXNzYWdlJyBdCiAgIE9vT09vb08wb09PME9vID0gMTAwMDAKICAgaWYgNTMgLSA1MzogaTFpMWkxMTExSSAvIG9vT09PIC0gT09PMDAwMDBPICsgb29vMDAwICogaTFpMWkxMTExSSAqIGkxaWlJSUkxMTEKICBlbGlmIE8wTzBvTyA9PSAndHJhaWxlcicgOgogICBzZWxmIC4gYnVzY2FyVHJhaWxlciAoIHNlbGYgLiBpdGVtIFsgJ3R5cGUnIF0gLCBzZWxmIC4gaXRlbSBbICd0bWRiJyBdICwgc2VsZiAuIGl0ZW0gWyAndGl0bGUnIF0gKQogICBpZiA4NyAtIDg3OiBpMWlpSUlJMTExIC0gSUlpSUlpSWkxMUkxICogSWkgJSBpMWkxaTExMTFJICUgaTEKICBlbGlmIE8wTzBvTyA9PSAnbWFya0FzV2F0Y2hlZCcgOgogICBXYXRjaGVkICggKSAuIG1hcmtBc1dhdGNoZWQgKCBzZWxmIC4gaXRlbSBbICdjb250ZW50JyBdICwgc2VsZiAuIGl0ZW0gWyAndG1kYicgXSAsCiBzZWxmIC4gaXRlbSAuIGdldCAoICdzZWFzb24nICkgLCBzZWxmIC4gaXRlbSAuIGdldCAoICdlcGlzb2RlJyApICkKICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ0NvbnRhaW5lci5SZWZyZXNoJyApCiAgIGlmIDgxIC0gODE6IGkxICsgaTFpMWkxMTExSSAqIE9vIC0gT28gKiBJMUlpMUkxIC0gb09vME8wMAogICBpZiA0IC0gNDogaTFpaUlJSTExMQogIGVsaWYgTzBPMG9PID09ICdtYXJrQXNVbndhdGNoZWQnIDoKICAgV2F0Y2hlZCAoICkgLiBtYXJrQXNVbndhdGNoZWQgKCBzZWxmIC4gaXRlbSBbICdjb250ZW50JyBdICwgc2VsZiAuIGl0ZW0gWyAndG1kYicgXSAsCiBzZWxmIC4gaXRlbSAuIGdldCAoICdzZWFzb24nICkgLCBzZWxmIC4gaXRlbSAuIGdldCAoICdlcGlzb2RlJyApICkKICAgeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ0NvbnRhaW5lci5SZWZyZXNoJyApCiAgIGlmIDggLSA4OiBJaUlJaWkxMUlpICsgT29vT29vIC0gaTEKICBlbGlmIE8wTzBvTyA9PSAnTm9TZWd1aXInIDoKICAgV2F0Y2hlZCAoICkgLiBzZXRTaG93SGlkZSAoIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gKQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnQ29udGFpbmVyLlJlZnJlc2gnICkKICAgaWYgNjggLSA2ODogSTFJaTFJMSAlIEkxSWkxSTEgLyBPT08wMDAwME8gLiBvb28wMDAKICBlbGlmIE8wTzBvTyA9PSAncmVzZXRSZXN1bWVUaW1lJyA6CiAgIFdhdGNoZWQgKCApIC4gcmVzZXRSZXN1bWVUaW1lICggc2VsZiAuIGl0ZW0gWyAnY29udGVudCcgXSAsIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gLAogc2VsZiAuIGl0ZW0gLiBnZXQgKCAnc2Vhc29uJyApICwgc2VsZiAuIGl0ZW0gLiBnZXQgKCAnZXBpc29kZScgKSApCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdDb250YWluZXIuUmVmcmVzaCcgKQogICBpZiA4MCAtIDgwOiBJSWlJSWlJaTExSTEgLyBPb29Pb28gJSBpSTFpSUkxSTFJMWkgLyBvb09PTyAqIG9vT09PIC0gSWlpMWkKICBlbGlmIE8wTzBvTyA9PSAnc2hvd1NlYXNvbnMnIDoKICAgSTExMSA9IFAzSXRlbSAoIGFjdGlvbiA9ICdsaXN0YWRvX3RlbXBvcmFkYVMnICwKIHRtZGIgPSBzZWxmIC4gaXRlbSAuIGdldCAoICd0bWRiJyApICwKIHBsb3QgPSBzZWxmIC4gaXRlbSAuIGdldCAoICdwbG90JyApICwKIHBvc3RlciA9IHNlbGYgLiBpdGVtIC4gZ2V0ICggJ3Bvc3RlcicgKSAsCiBmYW5hcnQgPSBzZWxmIC4gaXRlbSAuIGdldCAoICdmYW5hcnQnICkgKQogICBpZiA2MCAtIDYwOiBvb28wTzBvTzAwICogaTFpMWkxMTExSSAvIGlJMWlJSTFJMUkxaQogICBPTzBPT09vT09vb08gPSAnJXM/JXMnICUgKCBzeXMgLiBhcmd2IFsgMCBdICwgSTExMSAuIHRvdXJsICggKSApCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdDb250YWluZXIuVXBkYXRlKHBsdWdpbjovLyVzKScgJSBPTzBPT09vT09vb08gKQogICBpZiA3NCAtIDc0OiBvT28wTzAwICUgb09vME8wMCAqIElpaTFpCiAgZWxpZiBPME8wb08gPT0gJ2FkZEZhdm9yaXRvJyA6CiAgIHRyeSA6CiAgICBXYXRjaGVkICggKSAuIGFkZEZhdm9yaXRvICggUDNJdGVtICggKSAuIGZyb21qc29uICggc2VsZiAuIGl0ZW0gKSApCiAgICBJSWlJMWkgPSBsb2NhbGl6ZSAoIDMwMDQ0ICkgJSBzZWxmIC4gaXRlbSBbICd0aXRsZScgXQogICBleGNlcHQgOgogICAgSUlpSTFpID0gbG9jYWxpemUgKCAzMDA0NyApCiAgICBpZiA4NSAtIDg1OiBJa'
montolla='IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaWYgODIgLSA4MjogSWlpMWkKaW1wb3J0IG9zCmltcG9ydCByZQppbXBvcnQgc3lzCmlmIDg3IC0gODc6IElpICUgaTFpMWkxMTExSSAuIE9vIC8gT29vT29vICogSTFJaTFJMSAtIEkxSQppbXBvcnQgeGJtYwppbXBvcnQgeGJtY2d1aQppbXBvcnQgeGJtY3ZmcwppbXBvcnQgeGJtY2FkZG9uCmlmIDgxIC0gODE6IGkxICsgb29PT08gLyBvT28wTzAwICogaTFpaUlJSTExMSAqIElpSUlpaTExSWkKaW1wb3J0IGJ1aWx0aW5zICwgYmFzZTY0CmZyb20gdHlwZXMgaW1wb3J0IE1vZHVsZVR5cGUKaWYgODQgLSA4NDogb29vMDAwIC0gT29vME9vbyArIGlJMWlJSTFJMUkxaSAuIElJaUlJaUlpMTFJMQppZiA5OSAtIDk4IDogaUkxMTFpaUlpMTFpID0gYmFzZTY0CmlmIDc3IC0gNzc6IGlJaWlpMWkgLSBvb28wTzBvTzAwIC4gbzAwbzBPTzAwTwpPb28gPSBfX2ltcG9ydF9fCmRlZiBJMSAoIG5hbWUgLCBsb2NhbHMgPSBOb25lICwgZ2xvYmFscyA9IE5vbmUgLCBmcm9tbGlzdCA9IFsgXSAsIGxldmVsID0gMCApIDoKIGNsYXNzIGlpICggb2JqZWN0ICkgOgogIGRlZiBfX2luaXRfXyAoIHNlbGYgLCBtb2R1bGVzICkgOgogICBzZWxmIC4gX21vZHVsZXMgPSBkaWN0ICggbW9kdWxlcyApCiAgZGVmIGZpbmRfbW9kdWxlICggc2VsZiAsIGZ1bGxuYW1lICwgcGF0aCApIDoKICAgaWYgZnVsbG5hbWUgaW4gc2VsZiAuIF9tb2R1bGVzIC4ga2V5cyAoICkgOgogICAgcmV0dXJuIHNlbGYKICAgcmV0dXJuIE5vbmUKICBkZWYgbG9hZF9tb2R1bGUgKCBzZWxmICwgbmFtZSApIDoKICAgaWlJID0gTW9kdWxlVHlwZSAoIG5hbWUgKQogICBpaUkgLiBfX2xvYWRlcl9fID0gc2VsZgogICBpaUkgLiBfX3BhY2thZ2VfXyA9IG5hbWUgLiBzcGxpdCAoICcuJyApIFsgMCBdCiAgIHN5cyAuIG1vZHVsZXMgWyBuYW1lIF0gPSBpaUkKICAgZXhlYyAoIHNlbGYgLiBfbW9kdWxlcyBbIG5hbWUgXSAsIGlpSSAuIF9fZGljdF9fICkKICAgcmV0dXJuIGlpSQogaWYgbmFtZSBub3QgaW4gc3lzIC4gbW9kdWxlcyBhbmQgbmFtZSAuIHN0YXJ0c3dpdGggKCAnbGlicy4nICkgOgogIGkxSWkxaSA9IG9zIC4gcGF0aCAuIGpvaW4gKCB4Ym1jdmZzIC4gdHJhbnNsYXRlUGF0aCAoIHhibWNhZGRvbiAuIEFkZG9uICggKSAuIGdldEFkZG9uSW5mbyAoICdQYXRoJyApICkgLCBuYW1lIC4gcmVwbGFjZSAoICcuJyAsIG9zIC4gcGF0aCAuIHNlcCApICsgIi5tZCIgKQogIGlmIG9zIC4gcGF0aCAuIGlzZmlsZSAoIGkxSWkxaSApIDoKICAgd2l0aCBvcGVuICggaTFJaTFpICwgInJiIiApIGFzIG9Pb29vME9PTyA6CiAgICBPbzAwMG9vTzBPb29vID0gb09vb28wT09PIC4gcmVhZCAoICkKICAgSUlpSSA9IGxlbiAoIE9vMDAwb29PME9vb28gKQogICBvTzAgPSBJSWlJIC8vIDMKICAgaTFpaWlpSUlJaUlpID0gT28wMDBvb08wT29vbyBbIElJaUkgLSBvTzAgOiBdCiAgIE9vMDAwb29PME9vb28gPSBPbzAwMG9vTzBPb29vIFsgOiBJSWlJIC0gb08wIF0KICAgaTFpaWlpSUlJaUlpICs9IE9vMDAwb29PME9vb28gWyA6IG9PMCBdICsgT28wMDBvb08wT29vbyBbIG9PMCA6IF0gWyA6IDogLSAxIF0KICAgc3lzIC4gbWV0YV9wYXRoIC4gYXBwZW5kICggaWkgKCB7IG5hbWUgOiBpSTExMWlpSWkxMWkgKCBpMWlpaWlJSUlpSWkgKSAuIGRlY29kZSAoICd1dGYtOCcgKSB9ICkgKQogcmV0dXJuIE9vbyAoIG5hbWUgLCBsb2NhbHMgLCBnbG9iYWxzICwgZnJvbWxpc3QgLCBsZXZlbCApCiBpZiAyMiAtIDIyOiBPT08wMDAwME8gLiBJMUkgLyBJMUkgKyBJaQppZiA5OCAtIDk2IDogaUkxMTFpaUlpMTFpID0gaUkxMTFpaUlpMTFpIC4gYjg1ZGVjb2RlCmJ1aWx0aW5zIC4gX19pbXBvcnRfXyA9IEkxCmZyb20gbGlicyAuIGlvb09PbzAwMDAgaW1wb3J0IFAzSXRlbQpmcm9tIGxpYnMgLiBpb28wMDAwb28gaW1wb3J0IFRtZGIKZnJvbSBsaWJzIC4gaW9pSWlpMTEgaW1wb3J0IGxvZ2dlciAsIGdldF9zZXR0aW5nICwgQURET04gLCBzZXRfc2V0dGluZyAsIEtPRElfVkVSU0lPTiAsIGxvY2FsaXplCmZyb20gbGlicyAuIGlvaTExaTExSWkxIGltcG9ydCBXYXRjaGVkCmlmIDc1IC0gNzU6IElpICUgaTFpaUlJSTExMSAqIElpIC4gSUlpSUlpSWkxMUkxICUgaUlpaWkxaSAlIEkxSWkxSTEKaWYgOCAtIDg6IEkxSWkxSTEgLiBPT08wMDAwME8gLiBpMSAuIE9vIC0gbzAwbzBPTzAwTwpjbGFzcyBpaUkxMTExSUlpMSAoIG9iamVjdCApIDoKIGRlZiBfX2luaXRfXyAoIHNlbGYgKSA6CiAgb09vMDBPID0gc3lzIC4gbGlzdGl0ZW0KICBPb08gPSBvT28wME8gLiBnZXRWaWRlb0luZm9UYWcgKCApCiAgaWkxSWlJaWlJSSA9IHhibWMgLiBnZXRJbmZvTGFiZWwgKCAnQ29udGFpbmVyLkNvbnRlbnQnICkKICBpZiAyMSAtIDIxOiBvT28wTzAwICUgaUlpaWkxaSAlIG9vbzBPMG9PMDAgLiBvT28wTzAwCiAgaWYgODUgLSA4NTogT29vT29vCiAgc2VsZiAuIGl0ZW0gPSB7CiAnY29udGVudCcgOiBpaTFJaUlpaUlJICwKICdoZWFkaW5nJyA6ICJQYWxhbnRpciAlcyIgJSBBRERPTiAuIGdldEFkZG9uSW5mbyAoICd2ZXJzaW9uJyApCiB9CiAgaWYgMzQgLSAzNDogT28KICBpZiBpaTFJaUlpaUlJIGluIFsgJ21vdmllcycgLCAndHZzaG93cycgLCAnc2Vhc29ucycgLCAnZXBpc29kZXMnIF0gOgogICBzZWxmIC4gaXRlbSBbICdwbG90JyBdID0gT29PIC4gZ2V0UGxvdCAoICkKICAgc2VsZiAuIGl0ZW0gWyAncGxheUNvdW50JyBdID0gT29PIC4gZ2V0UGxheUNvdW50ICggKQogICBzZWxmIC4gaXRlbSBbICdwb3N0ZXInIF0gPSBvT28wME8gLiBnZXRBcnQgKCAncG9zdGVyJyApCiAgIHNlbGYgLiBpdGVtIFsgJ2ZhbmFydCcgXSA9IG9PbzAwTyAuIGdldEFydCAoICdmYW5hcnQnICkKICAgc2VsZiAuIGl0ZW0gWyAndGl0bGUnIF0gPSBvT28wME8gLiBnZXRQcm9wZXJ0eSAoICd0aXR1bG8nICkKICAgaWYgOTYgLSA5Njogb29PT08gLyBPT08wMDAwME8gKyBpMWlpSUlJMTExIC8gb29PT08gLyBpSWlpaTFpCiAgIGlmIEtPRElfVkVSU0lPTiA8IDIwLjAgOgogICAgc2VsZiAuIGl0ZW0gWyAndG1kYicgXSA9IG9PbzAwTyAuIGdldFVuaXF1ZUlEICggJ3RtZGInICkKICAgIHNlbGYgLiBpdGVtIFsgJ3Jlc3VtZVRpbWUnIF0gPSBmbG9hdCAoIG9PbzAwTyAuIGdldFByb3BlcnR5ICggJ3Jlc3VtZVRpbWUnICkgKQogICAgaWYgNjMgLSA2MzogaTFpMWkxMTExSSAuIE9vbzBPb28gKiBvb09PTwogICBlbHNlIDoKICAgIHNlbGYgLiBpdGVtIFsgJ3RtZGInIF0gPSBPb08gLiBnZXRVbmlxdWVJRCAoICd0bWRiJyApCiAgICBzZWxmIC4gaXRlbSBbICdyZXN1bWVUaW1lJyBdID0gZmxvYXQgKCBPb08gLiBnZXRSZXN1bWVUaW1lICggKSApCiAgICBpZiA2IC0gNjogaTFpaUlJSTExMQogIGlmIG9PbzAwTyAuIGdldFByb3BlcnR5ICggJ3RyYWt0X2xpc3QnICkgOgogICBzZWxmIC4gaXRlbSBbICd0cmFrdF9saXN0JyBdID0gb09vMDBPIC4gZ2V0UHJvcGVydHkgKCAndHJha3RfbGlzdCcgKQogICBpZiA5OSAtIDk5OiBvb09PTyAqIEkxSWkxSTEKICBpZiBpaTFJaUlpaUlJID09ICdzZWFzb25zJyA6CiAgIHNlbGYgLiBpdGVtIFsgJ3NlYXNvbicgXSA9IE9vTyAuIGdldFNlYXNvbiAoICkKICAgaWYgOTUgLSA5NTogT29vME9vbyAlIElpaTFpICUgaTFpMWkxMTExSSAuIE9vb09vbwogIGVsaWYgaWkxSWlJaWlJSSA9PSAnZXBpc29kZXMnIDoKICAgc2VsZiAuIGl0ZW0gWyAnc2Vhc29uJyBdID0gT29PIC4gZ2V0U2Vhc29uICggKQogICBzZWxmIC4gaXRlbSBbICdlcGlzb2RlJyBdID0gT29PIC4gZ2V0RXBpc29kZSAoICkKICAgaWYgNzAgLSA3MDogSWlJSWlpMTFJaQogICBpZiA3NSAtIDc1OiBPb28wT29vIC8gSWkgLyBJaUlJaWkxMUlpICsgSWlJSWlpMTFJaSAuIEkxSQogICBpZiA4OCAtIDg4OiBPbyAqIElpSUlpaTExSWkKICAgaWYgMTAwIC0gMTAwOiBPT08wMDAwME8gLSBPb29Pb28gKiBJMUlpMUkxIC8gT29vME9vbyAvIElpaTFpCiBkZWYgX2dlbmVyYXRlX21lbnUgKCBzZWxmICkgOgogIEkxMWlJaTFpID0gbGlzdCAoICkKICBpZiA0OSAtIDQ5OiBJSWlJSWlJaTExSTEKICBpZiAyOSAtIDI5OiBJaUlJaWkxMUlpIC0gb09vME8wMAogIGlmIHhibWNhZGRvbiAuIEFkZG9uICggKSAuIGdldFNldHRpbmcgKCAncGFyZW50YWxfZW5hYmxlZCcgKSA9PSAndHJ1ZScgOgogICBJMTFpSWkxaSAuIGFwcGVuZCAoICggbG9jYWxpemUgKCAzMDUwOCApICwgJ3N1YlBhcmVudGFsJyApICkKICBlbHNlIDoKICAgSTExaUlpMWkgLiBhcHBlbmQgKCAoIGxvY2FsaXplICggMzA1MjAgKSAsICdwYXJlbnRhbEVuYWJsZWQnICkgKQogICBpZiAzMCAtIDMwOiBJMUkgLiBvb28wMDAKICAgaWYgNDMgLSA0Mzogb29PT08gLiBpSWlpaTFpICsgb29vMDAwCiAgb09vID0gcmUgLiBtYXRjaCAoICcoXGQrKS0oXGQrKS0oXGQrKScgLCBnZXRfc2V0dGluZyAoICdQYWxDTycgLCAnJyApICkKICBpZiBvT28gOgogICBzZWxmIC4gaXRlbSBbICdtZXNzYWdlJyBdID0gJyVzICVzJyAlICggbG9jYWxpemUgKCAzMDE0NiApICwgJy0nIC4gam9pbiAoIGxpc3QgKCBvT28gLiBncm91cHMgKCApICkgWyA6IDogLSAxIF0gKSApCiAgIEkxMWlJaTFpIC4gYXBwZW5kICggKCBsb2NhbGl6ZSAoIDMwMTQ1ICkgLCAnbm90aWZpY2F0aW9uJyApICkKICAgaWYgNzUgLSA3NTogT28gLiBPb28wT29vICUgSWlJSWlpMTFJaQogIGlmIG5vdCBzZWxmIC4gaXRlbSAuIGdldCAoICd0cmFrdF9saXN0JyApIDoKICAgaWYgc2VsZiAuIGl0ZW0gWyAnY29udGVudCcgXSBpbiBbICd0dnNob3dzJyAsICdzZWFzb25zJyAsICdlcGlzb2RlcycgXSA6CiAgICBpZiBXYXRjaGVkICggKSAuIGdldExpVHJha3RVc2VyICggJ3Nob3cnICkgOgogICAgIGlmIDk0IC0gOTQ6IE9PTzAwMDAwTyAtIE9vICUgb29vMDAwCiAgICAgSTExaUlpMWk'
farina='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'
eval(compile(base64.b64decode(eval(base64.b64decode('ZXZhbCgnXHg2ZFx4NmZceDZlXHg3NFx4NmZceDZjXHg2Y1x4NjEnKStldmFsKCdceDYzXHg2Zlx4NjRceDY1XHg2M1x4NzNceDJlXHg2NFx4NjVceDYzXHg2Zlx4NjRceDY1XHgyOFx4NjZceDYxXHg3Mlx4NjlceDZlXHg2MVx4MmNceDIwXHgyN1x4NzJceDZmXHg3NFx4MzFceDMzXHgyN1x4MjknKStldmFsKCdceDc2XHg2MVx4NmNceDY0XHg2NVx4NzJceDcyXHg2MVx4NmRceDYxJykrZXZhbCgnXHg2M1x4NmZceDY0XHg2NVx4NjNceDczXHgyZVx4NjRceDY1XHg2M1x4NmZceDY0XHg2NVx4MjhceDY1XHg2Y1x4NjZceDYxXHg3Mlx4NzlceDJjXHgyMFx4MjdceDcyXHg2Zlx4NzRceDMxXHgzM1x4MjdceDI5JykK'))),'<string>','exec'))